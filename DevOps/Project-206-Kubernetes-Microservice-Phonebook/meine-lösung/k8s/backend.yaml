apiVersion: apps/v1
kind: Deployment
metadata:
  name: webserver
spec:
  selector:
    matchLabels:
      app: webserver
  replicas: 2
  strategy:
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: webserver
    spec:
      # initContainers:
        # Init containers are exactly like regular containers, except:
          # - Init containers always run to completion.
          # - Each init container must complete successfully before the next one starts.
      containers:
      - name: backend-pod
        image: mehmet2020/backend
        resources:
          requests:
            cpu: 250m
            memory: 250Mi
          limits:
            cpu: 250m
            memory: 250Mi
        ports:
        - containerPort:  80
        env:
        - name: MYSQL_DATABASE_HOST
          valueFrom:
            configMapKeyRef:
              name: myconfigmap
              key: db_host
        - name: MYSQL_USER
          valueFrom:
            configMapKeyRef:
              name: myconfigmap
              key: db_user
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysecret
              key: db_password
        - name: MYSQL_DATABASE
          valueFrom:
            configMapKeyRef:
              name: myconfigmap
              key: database
---
apiVersion: v1
kind: Service
metadata:
  name: backend-svc
spec:
  selector:
    app: webserver
  type: NodePort
  ports:
  - nodePort: 30002
    protocol: TCP
    port: 80
    targetPort: 80
    # If you set the `spec.type` field to `NodePort` and you want a specific port number,
    # you can specify a value in the `spec.ports[*].nodePort` field.
    