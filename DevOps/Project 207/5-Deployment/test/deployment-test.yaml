apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-claim
  namespace: test
spec:
  storageClassName: local-storage
  resources:
    requests:
      storage: 2Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: wp-claim
  namespace: test
spec:
  storageClassName: local-storage
  resources:
    requests:
      storage: 2Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-wordpress
  namespace: test
spec:
  selector:
    matchLabels:
      app: wp
  strategy:
    type: Recreate #RollingUpdate-->.rollingUpdate.maxUnavailable and .rollingUpdate.maxSurge
  template:
    metadata:
      labels:
        app: wp
    spec:
      containers:
      - name: website
        image: wordpress:latest
        env:
          - name: WORDPRESS_DB_HOST
            value: my-db-svc-test

          - name: WORDPRESS_DB_USER
            valueFrom:
              secretKeyRef:
                name:  my-secret
                key: user

          - name: WORDPRESS_DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name:  my-secret
                key: userpassword

          - name: WORDPRESS_DB_NAME
            valueFrom:
              secretKeyRef:
                name:  my-secret
                key: database
        resources:
          limits:
            memory: "1Gi"
            cpu: "250m"
        ports:
        - containerPort: 80
        volumeMounts:
          - name:  wp-pv-test
            mountPath: /var/www/html/
      volumes:
        - name: wp-pv-test
          persistentVolumeClaim:
            claimName: wp-claim
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - db
            topologyKey: kubernetes.io/hostname # ayni hostname'in uzerinde olusuyor

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-database
  namespace: test
spec:
  selector:
    matchLabels:
      app: db
  strategy:
    type: Recreate #RollingUpdate-->.rollingUpdate.maxUnavailable and .rollingUpdate.maxSurge
  template:
    metadata:
      labels:
        app: db
    spec:
      containers:
      - name: database
        image: mysql:5.6
        env:
          - name: MYSQL_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                name:  my-secret
                key: root

          - name: MYSQL_USER
            valueFrom:
              secretKeyRef:
                name:  my-secret
                key: user

          - name: MYSQL_PASSWORD
            valueFrom:
              secretKeyRef:
                name:  my-secret
                key: userpassword

          - name: MYSQL_DATABASE
            valueFrom:
              secretKeyRef:
                name:  my-secret
                key: database
        resources:
          limits:
            memory: "1Gi"
            cpu: "250m"
        
        ports:
        - containerPort: 3306
        volumeMounts:
          - name: mysql-pv-test
            mountPath: /var/lib/mysql
      volumes:
        - name: mysql-pv-test
          persistentVolumeClaim:
            claimName: mysql-claim
---
apiVersion: v1
kind: Service
metadata:
  name: my-db-svc-test
  namespace: test
spec:
  type: ClusterIP
  selector:
    app: db
  ports:
  - port: 3306
    targetPort: 3306
---
apiVersion: v1
kind: Service
metadata:
  name: my-wp-svc-test
  namespace: test
spec:
  type: ClusterIP
  selector:
    app: wp
  ports:
  - port: 80
    targetPort: 80


